name: Terraform Drift Detection

on: 
  schedule:

    - cron: '0 9 * * *'
  workflow_dispatch:

env: 
  TF_VERSION: '1.6.0'
  AWS_REGION: eu-west-2
  
jobs:
  detect-drift:
    name: Detect Infrastructure Drift
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      issues: write # To create issues if drift detected
      
    defaults:
      run: 
        working-directory: ./terraform
      
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with: 
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with: 
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=attendance-app/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Plan (Detect Drift)
        id: plan
        run: |
          terraform plan -detailed-exitcode -no-color \
          -var="environment=dev" \
          -var="project_name=attendance-app" \
          -var="domain_name=tech-with-tobi.com" \
          -var="route53_zone_name=tech-with-tobi.com" \
          -var="create_route53_record=true" \
          -var="db_username=${{ secrets.DB_USERNAME }}" \
          -var="db_password=${{ secrets.DB_PASSWORD }}" \
          -out=tfplan 2>&1 | tee plan_output.txt
        continue-on-error: true
        
      - name: Check for Drift
        id: drift
        run: |
          # Exit code 0 = no changes, 1 = error, 2 changes detected
          if [ "${{ steps.plan.outcome }}" == "failure" ]; then
            EXIT_CODE=${{ steps.plan.outputs.exitcode }}
            if [ "$EXIT_CODE" == "2" ]; then
              echo "drift_detected=true" >> $GITHUB_OUTPUT
              echo "DRIFT DETECTED! Infrastructure has diverged from code."
            else
              echo "drift_detected=false" >> $GITHUB_OUTPUT
              echo "Error running terraform plan"
              exit 1
            fi
          else
            echo "drift_detected=false" >> $GITHUB_OUPUT
            echo "No drift detected. Infrastructure matches code."
          fi
