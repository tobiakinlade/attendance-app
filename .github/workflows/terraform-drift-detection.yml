name: Terraform Drift Detection

on:
  schedule:
    - cron: '0 9 * * *'
  workflow_dispatch:

env:
  TF_VERSION: '1.6.0'
  AWS_REGION: eu-west-2

jobs:
  detect-drift:
    name: Detect Infrastructure Drift
    runs-on: ubuntu-latest
    permissions:
      id-token: write
      contents: read
      issues: write

    defaults:
      run:
        working-directory: ./terraform

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.AWS_ROLE_ARN }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: ${{ env.TF_VERSION }}

      - name: Terraform Init
        run: |
          terraform init \
            -backend-config="bucket=${{ secrets.TF_STATE_BUCKET }}" \
            -backend-config="key=attendance-app/terraform.tfstate" \
            -backend-config="region=${{ env.AWS_REGION }}"

      - name: Terraform Plan (Detect Drift)
        id: plan
        run: |
          terraform plan -detailed-exitcode -no-color \
            -var="environment=dev" \
            -var="project_name=attendance-app" \
            -var="domain_name=tech-with-tobi.com" \
            -var="route53_zone_name=tech-with-tobi.com" \
            -var="create_route53_record=true" \
            -var="db_username=${{ secrets.DB_USERNAME }}" \
            -var="db_password=${{ secrets.DB_PASSWORD }}" \
            -out=tfplan 2>&1 | tee plan_output.txt
        continue-on-error: true

      - name: Check for Drift
        id: drift
        run: |
          if [ "${{ steps.plan.outcome }}" == "failure" ]; then
            EXIT_CODE=$(terraform plan -detailed-exitcode > /dev/null 2>&1; echo $?)
            if [ "$EXIT_CODE" == "2" ]; then
              echo "drift_detected=true" >> $GITHUB_OUTPUT
            else
              echo "drift_detected=false" >> $GITHUB_OUTPUT
            fi
          else
            echo "drift_detected=false" >> $GITHUB_OUTPUT
          fi

      - name: Prepare Email Body
        if: steps.drift.outputs.drift_detected == 'true'
        id: email
        run: |
          cat > email_body.html << 'EOF'
          <!DOCTYPE html>
          <html>
          <head>
            <style>
              body { font-family: Arial, sans-serif; line-height: 1.6; color: #333; }
              .container { max-width: 600px; margin: 0 auto; padding: 20px; }
              .header { background: #ff6b6b; color: white; padding: 20px; border-radius: 5px; }
              .content { background: #f9f9f9; padding: 20px; margin-top: 20px; border-radius: 5px; }
              .code-block { background: #282c34; color: #abb2bf; padding: 15px; border-radius: 5px; overflow-x: auto; }
              .button { background: #4CAF50; color: white; padding: 12px 24px; text-decoration: none; border-radius: 5px; display: inline-block; margin-top: 15px; }
              .warning { background: #fff3cd; border-left: 4px solid #ffc107; padding: 15px; margin: 15px 0; }
              .info { color: #666; font-size: 14px; margin-top: 20px; padding-top: 20px; border-top: 1px solid #ddd; }
            </style>
          </head>
          <body>
            <div class="container">
              <div class="header">
                <h1>üö® Infrastructure Drift Detected</h1>
              </div>
              
              <div class="content">
                <p><strong>Time:</strong> $(date -u '+%Y-%m-%d %H:%M:%S UTC')</p>
                <p><strong>Environment:</strong> dev</p>
                <p><strong>Region:</strong> ${{ env.AWS_REGION }}</p>
                <p><strong>Repository:</strong> ${{ github.repository }}</p>
                
                <div class="warning">
                  <strong>‚ö†Ô∏è Action Required</strong><br>
                  Infrastructure has diverged from the Terraform code. This could indicate:
                  <ul>
                    <li>Manual changes via AWS Console</li>
                    <li>Emergency fixes not committed to code</li>
                    <li>Changes by other automation tools</li>
                    <li>Resource drift due to AWS updates</li>
                  </ul>
                </div>
                
                <h3>Changes Detected:</h3>
                <div class="code-block">
                  <pre>$(cat plan_output.txt | head -50)</pre>
                </div>
                
                <h3>Next Steps:</h3>
                <ol>
                  <li>Review the changes shown above</li>
                  <li>Determine if drift is expected or problematic</li>
                  <li>Either update Terraform code or apply to fix drift</li>
                  <li>Document the reason for drift in the GitHub issue</li>
                </ol>
                
                <a href="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" class="button">View Full Details</a>
                <a href="https://github.com/${{ github.repository }}/actions/workflows/terraform-apply.yml" class="button">Run Terraform Apply</a>
              </div>
              
              <div class="info">
                <p>This is an automated message from the DevOps pipeline.</p>
                <p>A GitHub issue has been created for tracking: <a href="https://github.com/${{ github.repository }}/issues">View Issues</a></p>
              </div>
            </div>
          </body>
          </html>
          EOF
          
          # Make it single line for GitHub Actions
          EMAIL_BODY=$(cat email_body.html | tr -d '\n' | sed 's/"/\\"/g')
          echo "body=$EMAIL_BODY" >> $GITHUB_OUTPUT

      - name: Create GitHub Issue
        if: steps.drift.outputs.drift_detected == 'true'
        id: issue
        uses: actions/github-script@v7
        with:
          script: |
            const issue = await github.rest.issues.create({
              owner: context.repo.owner,
              repo: context.repo.repo,
              title: 'üö® Infrastructure Drift Detected - ' + new Date().toISOString().split('T')[0],
              body: `## Infrastructure Drift Detected\n\n**Time:** ${new Date().toUTCString()}\n**Environment:** dev\n**Region:** ${{ env.AWS_REGION }}\n\n[View Workflow Run](https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }})`,
              labels: ['infrastructure', 'drift-detection', 'needs-review']
            });
            return issue.data.number;

  send-drift-notification:
    needs: detect-drift
    if: needs.detect-drift.outputs.drift_detected == 'true'
    uses: ./.github/workflows/helpers/send-email-ses.yml
    secrets:
      AWS_ROLE_ARN: ${{ secrets.AWS_ROLE_ARN }}
      EMAIL_RECIPIENTS: ${{ secrets.EMAIL_RECIPIENTS }}
      EMAIL_FROM: ${{ secrets.EMAIL_FROM }}
    with:
      subject: "üö® URGENT: Infrastructure Drift Detected - Action Required"
      body: ${{ needs.detect-drift.outputs.email_body }}
      priority: high
